/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse,
  GetTaskByIdMongoApiV1TasksMongoTaskIdGetPathParams,
  GetTaskByIdMongoApiV1TasksMongoTaskIdGet422,
} from '../types/GetTaskByIdMongoApiV1TasksMongoTaskIdGet.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey = (task_id: GetTaskByIdMongoApiV1TasksMongoTaskIdGetPathParams['task_id']) =>
  [{ url: '/api/v1/tasks/mongo/:task_id', params: { task_id: task_id } }] as const

export type GetTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey = ReturnType<typeof getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey>

/**
 * @description Retrieve detailed task information from MongoDB by task ID.**Returns:**- Complete task record with metadata and timestamps- File information (name, size, MIME type)- S3 storage details and processing status- Error details if the task failed**Use Cases:**- Get detailed task information for completed operations- Access error details for failed tasks- Audit task execution history
 * @summary Get task record from MongoDB
 * {@link /api/v1/tasks/mongo/:task_id}
 */
export async function getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspense(
  task_id: GetTaskByIdMongoApiV1TasksMongoTaskIdGetPathParams['task_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse, ResponseErrorConfig<GetTaskByIdMongoApiV1TasksMongoTaskIdGet422>, unknown>({
    method: 'GET',
    url: `/api/v1/tasks/mongo/${task_id}`,
    baseURL: 'https://processador-arquivos.sendvers.pro',
    ...requestConfig,
  })
  return res.data
}

export function getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryOptions(
  task_id: GetTaskByIdMongoApiV1TasksMongoTaskIdGetPathParams['task_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey(task_id)
  return queryOptions<
    GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse,
    ResponseErrorConfig<GetTaskByIdMongoApiV1TasksMongoTaskIdGet422>,
    GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse,
    typeof queryKey
  >({
    enabled: !!task_id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspense(task_id, config)
    },
  })
}

/**
 * @description Retrieve detailed task information from MongoDB by task ID.**Returns:**- Complete task record with metadata and timestamps- File information (name, size, MIME type)- S3 storage details and processing status- Error details if the task failed**Use Cases:**- Get detailed task information for completed operations- Access error details for failed tasks- Audit task execution history
 * @summary Get task record from MongoDB
 * {@link /api/v1/tasks/mongo/:task_id}
 */
export function useGetTaskByIdMongoApiV1TasksMongoTaskIdGetSuspense<
  TData = GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse,
  TQueryKey extends QueryKey = GetTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey,
>(
  task_id: GetTaskByIdMongoApiV1TasksMongoTaskIdGetPathParams['task_id'],
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        GetTaskByIdMongoApiV1TasksMongoTaskIdGetQueryResponse,
        ResponseErrorConfig<GetTaskByIdMongoApiV1TasksMongoTaskIdGet422>,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryKey(task_id)

  const query = useSuspenseQuery(
    {
      ...(getTaskByIdMongoApiV1TasksMongoTaskIdGetSuspenseQueryOptions(task_id, config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<TData, ResponseErrorConfig<GetTaskByIdMongoApiV1TasksMongoTaskIdGet422>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}