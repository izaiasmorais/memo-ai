/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  DeleteTaskApiV1TasksMongoTaskIdDeleteMutationResponse,
  DeleteTaskApiV1TasksMongoTaskIdDeletePathParams,
  DeleteTaskApiV1TasksMongoTaskIdDelete422,
} from '../types/DeleteTaskApiV1TasksMongoTaskIdDelete.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const deleteTaskApiV1TasksMongoTaskIdDeleteMutationKey = () => [{ url: '/api/v1/tasks/mongo/{task_id}' }] as const

export type DeleteTaskApiV1TasksMongoTaskIdDeleteMutationKey = ReturnType<typeof deleteTaskApiV1TasksMongoTaskIdDeleteMutationKey>

/**
 * @description Permanently delete a task record from MongoDB storage.**Warning:** This operation removes task history, metadata, and error logs.S3 files remain unchanged.**Use Cases:**- Clean up old task records- Remove sensitive or obsolete task data- Maintain database hygiene
 * @summary Delete task record from MongoDB
 * {@link /api/v1/tasks/mongo/:task_id}
 */
export async function deleteTaskApiV1TasksMongoTaskIdDelete(
  task_id: DeleteTaskApiV1TasksMongoTaskIdDeletePathParams['task_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<DeleteTaskApiV1TasksMongoTaskIdDeleteMutationResponse, ResponseErrorConfig<DeleteTaskApiV1TasksMongoTaskIdDelete422>, unknown>({
    method: 'DELETE',
    url: `/api/v1/tasks/mongo/${task_id}`,
    baseURL: 'https://processador-arquivos.sendvers.pro',
    ...requestConfig,
  })
  return res.data
}

/**
 * @description Permanently delete a task record from MongoDB storage.**Warning:** This operation removes task history, metadata, and error logs.S3 files remain unchanged.**Use Cases:**- Clean up old task records- Remove sensitive or obsolete task data- Maintain database hygiene
 * @summary Delete task record from MongoDB
 * {@link /api/v1/tasks/mongo/:task_id}
 */
export function useDeleteTaskApiV1TasksMongoTaskIdDelete<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteTaskApiV1TasksMongoTaskIdDeleteMutationResponse,
      ResponseErrorConfig<DeleteTaskApiV1TasksMongoTaskIdDelete422>,
      { task_id: DeleteTaskApiV1TasksMongoTaskIdDeletePathParams['task_id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteTaskApiV1TasksMongoTaskIdDeleteMutationKey()

  return useMutation<
    DeleteTaskApiV1TasksMongoTaskIdDeleteMutationResponse,
    ResponseErrorConfig<DeleteTaskApiV1TasksMongoTaskIdDelete422>,
    { task_id: DeleteTaskApiV1TasksMongoTaskIdDeletePathParams['task_id'] },
    TContext
  >(
    {
      mutationFn: async ({ task_id }) => {
        return deleteTaskApiV1TasksMongoTaskIdDelete(task_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}